.products-container {
    display: flex;
    justify-content: flex-end;
    flex-wrap: wrap;
    height: 100%;
    width: 100%;
    padding-top: 50px;

    .card {
        width: 300px;
        margin: 20px;
        box-shadow: 0px 0px 67px -25px #ccc;
        border-radius: 25px;
        background: rgb(238, 238, 238);
        color: #f87428;
        text-align: center;

        & h6 {
            color: #000;
            font-weight: 900;
            margin-top: 10px;
        }

        &:hover {
        box-shadow:inset 0px 0px 0px 2px #f87428;
        z-index: 6;
        }

        &:hover .products-list-button{
            display: inline-block;
        }
    }

    .card-image img {
        height: 300px;
        width: 296px;
        border-top-left-radius: 25px;
        border-top-right-radius: 25px;
        background-size: cover;
        background-position: center;
        padding: 2px;
        position: relative;
    }
}

.products-list-button {
        background: orange;
        border-radius: 8px;
        padding: 10px;
        position: absolute;
        border: none;
        z-index: 3;
        bottom: 3%;
        right: 27%;
        display: none;
        box-shadow:inset 0px 0px 0px 2px  #f87428;

        &:hover {
        color: #fff;
        }
    }



/*
<Fragment>
    <ul>
        <li class="arrow-left" ><i class="fas fa-arrow-left"></i></li>
        {pageNumbers.map((pageNumber, index)=>{
            index === 0 ? pageOffset = offset : pageOffset += rows;
            let payload = {offset: pageOffset, rows: rows, currentPage: pageNumber + 1};
            return (
                <li style={{display: "inline", padding: "5px"}} key={pageOffset}><button onClick={()=>{getPageData(payload)}} className={props.buttonCssClass}>{pageNumber + 1}</button></li>
            )
        })}
        <li style={{display: "inline", padding: "5px"}}>Page: {currentPageNumber} of {Math.ceil(pages)}</li>
        <li class="arrow-right" ><i class="fas fa-arrow-right"></i></li>
    </ul>
</Fragment>
*/