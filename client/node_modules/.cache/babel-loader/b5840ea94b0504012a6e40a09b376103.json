{"ast":null,"code":"var _jsxFileName = \"D:\\\\prog\\\\files\\\\shop\\\\client\\\\src\\\\components\\\\Selector\\\\Selector.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Selector.scss\";\n\nclass Selector extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSort = e => {\n      const id = e.target.id;\n\n      switch (id) {\n        case \"PriceAsc\":\n          this.props.sortedByPriceAsc();\n          break;\n\n        case \"PriceDesc\":\n          this.props.sortedByPriceDesc();\n          break;\n\n        case \"NameAsc\":\n          this.props.sortedByNameAsc();\n          break;\n\n        case \"NameDesc\":\n          this.props.sortedByNameDesc();\n          break;\n\n        case \"resetFilters\":\n          this.reset();\n          break;\n\n        default:\n          return false;\n      }\n    };\n\n    this.handleFilter = e => {\n      const id = e.target.id;\n      const checked = e.target.checked;\n\n      if (id === \"risers\") {\n        if (checked) {\n          return this.props.filteredByTypeRisers();\n        }\n\n        return this.props.risersRemoved();\n      }\n\n      if (id === \"limbs\") {\n        if (checked) {\n          return this.props.filteredByTypeLimbs();\n        }\n\n        return this.props.limbsRemoved();\n      }\n\n      if (id === \"finger tabs\") {\n        if (checked) {\n          return this.props.filteredByTypeTabs();\n        }\n\n        return this.props.tabsRemoved();\n      }\n\n      if (id === \"stabilizers\") {\n        if (checked) {\n          return this.props.filteredByTypeStabilizers();\n        }\n\n        return this.props.stabilizersRemoved();\n      }\n\n      if (id === \"arrows\") {\n        if (checked) {\n          return this.props.filteredByTypeArrows();\n        }\n\n        return this.props.arrowsRemoved();\n      }\n\n      if (id === \"sights\") {\n        if (checked) {\n          return this.props.filteredByTypeSights();\n        }\n\n        return this.props.sightsRemoved();\n      }\n\n      if (id === \"stands\") {\n        if (checked) {\n          return this.props.filteredByTypeStands();\n        }\n\n        return this.props.standsRemoved();\n      }\n\n      if (id === \"armguards\") {\n        if (checked) {\n          return this.props.filteredByTypeArmguards();\n        }\n\n        return this.props.armguardsRemoved();\n      }\n\n      this.props.setPage1();\n    };\n\n    this.reset = () => {\n      const inputs = document.getElementsByTagName(\"input\");\n\n      for (var input of inputs) {\n        input.checked = false;\n      }\n\n      this.props.resetFilters();\n    };\n  }\n\n  render() {\n    const selectData = [{\n      id: \"PriceAsc\",\n      name: \"price asc\"\n    }, {\n      id: \"PriceDesc\",\n      name: \"price desc\"\n    }, {\n      id: \"NameAsc\",\n      name: \"name asc\"\n    }, {\n      id: \"NameDesc\",\n      name: \"name desc\"\n    }, {\n      id: \"resetFilters\",\n      name: \"reset filters\"\n    }];\n    const filterData = [{\n      id: \"risers\"\n    }, {\n      id: \"limbs\"\n    }, {\n      id: \"finger tabs\"\n    }, {\n      id: \"stabilizers\"\n    }, {\n      id: \"arrows\"\n    }, {\n      id: \"sights\"\n    }, {\n      id: \"stands\"\n    }, {\n      id: \"armguards\"\n    }];\n    return React.createElement(\"div\", {\n      className: \"selector-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, selectData.map(item => React.createElement(\"div\", {\n      key: item.id,\n      className: \"selector-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      id: item.id,\n      activeClassName: \"active\",\n      style: {\n        textDecoration: \"none\"\n      },\n      to: \"/\",\n      className: \"selector-btn menu\",\n      onClick: id => {\n        this.handleSort(id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, item.name))), React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"input-group menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, filterData.map(item => React.createElement(\"div\", {\n      key: item.id,\n      className: \"input-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: item.id,\n      type: \"checkbox\",\n      onChange: this.handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, item.id)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.itemsReducers.items\n  };\n};\n\nconst mapDispatchToProps = { ...actions\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Selector);","map":{"version":3,"sources":["D:/prog/files/shop/client/src/components/Selector/Selector.js"],"names":["React","connect","actions","NavLink","Selector","Component","handleSort","e","id","target","props","sortedByPriceAsc","sortedByPriceDesc","sortedByNameAsc","sortedByNameDesc","reset","handleFilter","checked","filteredByTypeRisers","risersRemoved","filteredByTypeLimbs","limbsRemoved","filteredByTypeTabs","tabsRemoved","filteredByTypeStabilizers","stabilizersRemoved","filteredByTypeArrows","arrowsRemoved","filteredByTypeSights","sightsRemoved","filteredByTypeStands","standsRemoved","filteredByTypeArmguards","armguardsRemoved","setPage1","inputs","document","getElementsByTagName","input","resetFilters","render","selectData","name","filterData","map","item","textDecoration","mapStateToProps","state","items","itemsReducers","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/actions\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Selector.scss\";\r\n\r\nclass Selector extends React.Component {\r\n  handleSort = e => {\r\n    const id = e.target.id;\r\n\r\n    switch (id) {\r\n      case \"PriceAsc\":\r\n        this.props.sortedByPriceAsc();\r\n        break;\r\n      case \"PriceDesc\":\r\n        this.props.sortedByPriceDesc();\r\n        break;\r\n      case \"NameAsc\":\r\n        this.props.sortedByNameAsc();\r\n        break;\r\n      case \"NameDesc\":\r\n        this.props.sortedByNameDesc();\r\n        break;\r\n      case \"resetFilters\":\r\n        this.reset();\r\n        break;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  handleFilter = e => {\r\n    const id = e.target.id;\r\n    const checked = e.target.checked;\r\n\r\n    if (id === \"risers\") {\r\n      if (checked) {\r\n        return this.props.filteredByTypeRisers();\r\n      }\r\n      return this.props.risersRemoved();\r\n    }\r\n    if (id === \"limbs\") {\r\n      if (checked) {\r\n        return this.props.filteredByTypeLimbs();\r\n      }\r\n      return this.props.limbsRemoved();\r\n    }\r\n    if (id === \"finger tabs\") {\r\n      if (checked) {\r\n        return this.props.filteredByTypeTabs();\r\n      }\r\n      return this.props.tabsRemoved();\r\n    }\r\n    if (id === \"stabilizers\") {\r\n      if (checked) {\r\n        return this.props.filteredByTypeStabilizers();\r\n      }\r\n      return this.props.stabilizersRemoved();\r\n    }\r\n    if (id === \"arrows\") {\r\n      if (checked) {\r\n        return this.props.filteredByTypeArrows();\r\n      }\r\n      return this.props.arrowsRemoved();\r\n    }\r\n    if (id === \"sights\") {\r\n      if (checked) {\r\n        return this.props.filteredByTypeSights();\r\n      }\r\n      return this.props.sightsRemoved();\r\n    }\r\n    if (id === \"stands\") {\r\n      if (checked) {\r\n        return this.props.filteredByTypeStands();\r\n      }\r\n      return this.props.standsRemoved();\r\n    }\r\n    if (id === \"armguards\") {\r\n      if (checked) {\r\n        return this.props.filteredByTypeArmguards();\r\n      }\r\n      return this.props.armguardsRemoved();\r\n    }\r\n\r\n    this.props.setPage1();\r\n  };\r\n\r\n  reset = () => {\r\n    const inputs = document.getElementsByTagName(\"input\");\r\n    for (var input of inputs) {\r\n      input.checked = false;\r\n    }\r\n    this.props.resetFilters();\r\n  };\r\n\r\n  render() {\r\n    const selectData = [\r\n      { id: \"PriceAsc\", name: \"price asc\" },\r\n      { id: \"PriceDesc\", name: \"price desc\" },\r\n      { id: \"NameAsc\", name: \"name asc\" },\r\n      { id: \"NameDesc\", name: \"name desc\" },\r\n      { id: \"resetFilters\", name: \"reset filters\" }\r\n    ];\r\n\r\n    const filterData = [\r\n      { id: \"risers\" },\r\n      { id: \"limbs\" },\r\n      { id: \"finger tabs\" },\r\n      { id: \"stabilizers\" },\r\n      { id: \"arrows\" },\r\n      { id: \"sights\" },\r\n      { id: \"stands\" },\r\n      { id: \"armguards\" }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"selector-component\">\r\n        {selectData.map(item => (\r\n          <div key={item.id} className=\"selector-wrapper\">\r\n            <NavLink\r\n              id={item.id}\r\n              activeClassName=\"active\"\r\n              style={{ textDecoration: \"none\" }}\r\n              to=\"/\"\r\n              className=\"selector-btn menu\"\r\n              onClick={id => {\r\n                this.handleSort(id);\r\n              }}\r\n            >\r\n              {item.name}\r\n            </NavLink>\r\n          </div>\r\n        ))}\r\n\r\n        <div className=\"line\"></div>\r\n\r\n        <form className=\"input-group menu\">\r\n          {filterData.map(item => (\r\n            <div key={item.id} className=\"input-item\">\r\n              <input\r\n                id={item.id}\r\n                type=\"checkbox\"\r\n                onChange={this.handleFilter}\r\n              />\r\n              <label htmlFor={item.id}>{item.id}</label>\r\n            </div>\r\n          ))}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.itemsReducers.items\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...actions\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(Selector);"]},"metadata":{},"sourceType":"module"}